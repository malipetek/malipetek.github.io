import{_ as e,o as a,c as s,a as n}from"./app.d8498b5e.js";const y=JSON.parse('{"title":"Access Google Drive Reliably in Ubuntu","description":"Alternative method for accessing google drive in debian desktops.","frontmatter":{"title":"Access Google Drive Reliably in Ubuntu","description":"Alternative method for accessing google drive in debian desktops.","summary":null,"keywords":"Debian, Ubuntu, Linux, Bash, PC","image":"https://i.imgur.com/qC6ZiJM.png"},"headers":[{"level":2,"title":"Save complex command to single keyword","slug":"save-complex-command-to-single-keyword","link":"#save-complex-command-to-single-keyword","children":[{"level":3,"title":"End","slug":"end","link":"#end","children":[]}]}],"relativePath":"blog/linux/Convert Bash Scripts Into Named CLI Commands in Linux.md"}'),o={name:"blog/linux/Convert Bash Scripts Into Named CLI Commands in Linux.md"},t=n(`<h1 id="convert-bash-scripts-into-named-cli-commands-in-linux" tabindex="-1">Convert Bash Scripts Into Named CLI Commands in Linux <a class="header-anchor" href="#convert-bash-scripts-into-named-cli-commands-in-linux" aria-hidden="true">#</a></h1><p>When your daily OS is linux, sometimes some terminal commands are so useful you might want to save them.</p><p><em>For example I had a weird monitor thats output mode was not detected automatically. I used <code>xrandr</code> to add mode to set proper resolution.</em></p><p>I used to copy paste this command to terminal.</p><blockquote><p><code>xrandr --addmode VGA1 &quot;1024x600_60.00&quot;</code></p></blockquote><p>It was usually in terminal history so sometimes I used to only hit up arrow key to find that command.</p><p>However it is not ideal to do like this because sometimes I pollute my terminal history with many trials or installing packages and need to find this mode string again.</p><h2 id="save-complex-command-to-single-keyword" tabindex="-1">Save complex command to single keyword <a class="header-anchor" href="#save-complex-command-to-single-keyword" aria-hidden="true">#</a></h2><p>Maybe there is a simpler way but this is what I have found working for myself.</p><p>Open Terminal and paste:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/sbin/</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">touch</span><span style="color:#E1E4E8;"> [your-command] &amp;&amp; </span><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+x</span><span style="color:#E1E4E8;"> [your-command] &amp;&amp; </span><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gedit</span><span style="color:#E1E4E8;"> [your-command]</span></span>
<span class="line"></span></code></pre></div><p>When text editor opens with elevated permissions paste your command here like below and save:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[your termial command]</span></span>
<span class="line"></span></code></pre></div><p>If for some reason your command does not work you can try wrapping your command into <code>eval</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[your termial command]&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="end" tabindex="-1">End <a class="header-anchor" href="#end" aria-hidden="true">#</a></h3><p>Now you can use your-command in your terminal. Type beginning your command and push tab to see if its recognized.</p><p>You see we are typing your command multiple times process is quite painful but better than copy pasting or having to google it again IMHO.</p><p>Maybe we can write some command that generates these. Hit the comments if you already written such thing.</p>`,19),i=[t];function l(p,r,c,d,m,u){return a(),s("div",null,i)}const g=e(o,[["render",l]]);export{y as __pageData,g as default};
